{"version":3,"file":"static/js/692.3f3d777c.chunk.js","mappings":"8PAGaA,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACvB,GAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAaC,EAAb,KASF,OACE,kBAAMC,OAAO,OAAOC,SARC,SAAAC,GACjBA,EAAEC,iBACU,KAAVL,IACFF,EAASE,GACTC,EAAS,IACV,EAGH,WACA,kBAAOK,KAAK,OAAOC,SAAU,SAACH,GAAD,OAAKH,EAASG,EAAEI,OAAOR,MAAvB,EAA+BA,MAAOA,KACnE,mBAAQM,KAAK,SAAb,sBAGH,E,SCjBYG,EAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAeG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,WAAMF,GAAMG,MAAO,CAAEC,KAAMP,GAAnC,SACGI,KAFID,EADS,OAU3B,ECkCD,EA5CsB,WAAO,IAAD,EAC1B,GAA2Cf,EAAAA,EAAAA,UAAS,IAApD,eAAOW,EAAP,KAAsBS,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAHlB,wCAS1B,WAAkCC,GAAlC,+EACkB,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAF3B,kBAIyBA,EAAAA,GAAAA,IAAA,eAA0B,CAC7CC,OAAQ,CACNC,QALU,mCAMVH,MAAAA,KAPR,OAIUI,EAJV,QAUUC,EAASD,EAAOE,KAAKC,SAChBC,OAAS,GAClBd,EAAkBW,GAZxB,wDAgBII,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAjBd,2DAT0B,sBAoC1B,OAPAC,EAAAA,EAAAA,YAAU,WACJf,GA9BoB,oCA+BtBgB,CAAmBhB,EAGtB,GAAE,CAACF,KAGF,iCACE,SAACxB,EAAD,CAAWC,SAjCf,SAAkBE,GAChBsB,EAA0B,KAAVtB,EAAe,CAAEyB,MAAOzB,GAAU,CAAC,EACpD,IAgCIU,EAAeuB,OAAS,IAAK,SAACxB,EAAD,CAAcC,eAAgBA,MAGjE,C","sources":["components/Search/SearchBox.jsx","components/Search/SearchResult.jsx","components/Search/SearchMovies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchBox = ({getValue}) => {\n    const [value,setValue] = useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n       if(value === '') return;\n        getValue(value);\n        setValue('');\n      };\n \n  return (\n    <form action=\"form\" onSubmit={handleSubmit}>\n    <input type=\"text\" onChange={(e)=>setValue(e.target.value)} value={value}/>\n    <button type=\"submit\">Search</button>\n  </form>\n  );\n};\n\nSearchBox.propTypes = {\n    getValue: PropTypes.func.isRequired,\n  };","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport const SearchResult = ({ searchedMovies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {searchedMovies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nSearchResult.propTypes = {\n  searchedMovies: PropTypes.arrayOf(\n    PropTypes.PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from './SearchBox';\nimport { SearchResult } from './SearchResult';\n\n\n const SearchMovies = () => {\n  const [searchedMovies,setSearchedMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n\n  function getValue(value) {\n    setSearchParams(value !== '' ? { query: value } : {});\n  }\n\n  async function fetchSearchedMovie(query) {\n    const api_key = 'e3c158ab405aa7844dcf81b819b98dcd';\n    axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n    try {\n      const result = await axios.get(`search/movie`, {\n        params: {\n          api_key,\n          query,\n        },\n      });\n      const movies = result.data.results;\n      if (movies.length > 0) {\n        setSearchedMovies(movies);\n      }\n    }\n    catch (er) {\n      console.log(er.message);\n      throw new Error();\n    }\n  }\n  useEffect(() => {\n    if (search) {\n      fetchSearchedMovie(search);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchBox getValue={getValue} />\n      {searchedMovies.length > 0 && <SearchResult searchedMovies={searchedMovies}  /> }\n    </>\n  );\n};\n\nexport default SearchMovies;"],"names":["SearchBox","getValue","useState","value","setValue","action","onSubmit","e","preventDefault","type","onChange","target","SearchResult","searchedMovies","location","useLocation","map","id","title","to","state","from","setSearchedMovies","useSearchParams","searchParams","setSearchParams","search","get","query","axios","params","api_key","result","movies","data","results","length","console","log","message","Error","useEffect","fetchSearchedMovie"],"sourceRoot":""}