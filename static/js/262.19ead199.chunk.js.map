{"version":3,"file":"static/js/262.19ead199.chunk.js","mappings":"8SACAA,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEqBF,EAAAA,GAAAA,IAAU,qBAAsB,CACnDG,OAAQ,CACNF,QAAAA,KAJJ,UAEMG,EAFN,UAOMC,EAASD,EAAOE,KAAKC,SAChBC,OAAS,GARpB,yCASSH,GATT,6DAYAI,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAbV,gFAgBG,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gGAEkBd,EAAAA,GAAAA,IAAA,gBAAmBc,GAAM,CAC5CX,OAAQ,CACNF,QAAAA,KAJD,YAEGG,EAFH,QAOQE,KAPR,yCAQMF,EAAOE,MARb,6DAWHG,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAZP,gFAeA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,kGAEkBd,EAAAA,GAAAA,IAAA,gBAAmBc,EAAnB,YAAiC,CACpDX,OAAQ,CACNF,QAAAA,KAJD,UAEGG,EAFH,SAQGY,EAAaZ,EAAOE,KAAKW,MAR5B,yCAUKD,GAVL,6DAaHP,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAdP,gFAkBA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,kGAEkBd,EAAAA,GAAAA,IAAA,gBAAmBc,EAAnB,YAAiC,CACpDX,OAAQ,CACNF,QAAAA,KAJD,UAEGG,EAFH,SAOGe,EAAgBf,EAAOE,KAAKC,SAP/B,yCASMY,GATN,6DAYHV,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAbP,gFAiBA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,kGAEkBrB,EAAAA,GAAAA,IAAA,eAA0B,CAC7CG,OAAQ,CACNF,QAAAA,EACAoB,MAAAA,KALD,UAEGjB,EAFH,UAQGC,EAASD,EAAOE,KAAKC,SAChBC,OAAS,GATjB,yCAUKH,GAVL,6DAcHI,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAfP,gF,uFCzCb,UA1BsB,WACpB,IAAMU,GAAWC,EAAAA,EAAAA,MACjB,GAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAOA,IALAC,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,MAAgB0B,MAAK,SAAAvB,GAAM,OAAEqB,EAAkBrB,EAApB,GAE5B,GAAE,IAEEoB,EAEL,OACE,iCACE,4CACA,wBACGA,EAAeI,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,MAAP,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,WAAMjB,GAAMkB,MAAO,CAAEC,KAAMX,GAAnC,SACGQ,KAFIhB,EADS,QAU3B,C","sources":["backend/backend.js","components/TrendingToday/TrendingToday.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = 'e3c158ab405aa7844dcf81b819b98dcd';\n\n\n   export async function fetchTrending() {\n        try {\n          const result = await axios.get('trending/movie/day', {\n            params: {\n              api_key,\n            },\n          });\n          const movies = result.data.results;\n          if (movies.length > 0) {\n            return movies;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n      export async function fetchMovieById(id) {\n        try {\n          const result = await axios.get(`movie/${id}`, {\n            params: {\n              api_key,\n            },\n          });\n          if (result.data) {\n            return result.data;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n      export async function fetchMovieCast(id) {\n        try {\n          const result = await axios.get(`movie/${id}/credits`, {\n            params: {\n              api_key,\n            },\n          });\n    \n          const castResult = result.data.cast;\n          if (castResult) {\n           return castResult\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n\n      export async function fetchMovieRewiews(id) {\n        try {\n          const result = await axios.get(`movie/${id}/reviews`, {\n            params: {\n              api_key,\n            },\n          });\n          const reviewsResult = result.data.results;\n          if (reviewsResult) {\n            return reviewsResult;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n\n      export async function fetchSearchedMovie(query) {\n        try {\n          const result = await axios.get(`search/movie`, {\n            params: {\n              api_key,\n              query,\n            },\n          });\n          const movies = result.data.results;\n          if (movies.length > 0) {\n           return movies;\n          }\n        }\n        catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }","import { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect} from 'react';\nimport { fetchTrending } from 'backend/backend';\n\nconst TrendingToday = () => {\n  const location = useLocation();\n  const [trendingMovies, setTrendingMovies] = useState(null);\n\n  useEffect(() => {\n    fetchTrending().then(movies=>setTrendingMovies(movies));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!trendingMovies) return;\n\n  return (\n    <>\n      <h1>Trending Today</h1>\n      <ul>\n        {trendingMovies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default TrendingToday;"],"names":["axios","api_key","fetchTrending","params","result","movies","data","results","length","console","log","message","Error","fetchMovieById","id","fetchMovieCast","castResult","cast","fetchMovieRewiews","reviewsResult","fetchSearchedMovie","query","location","useLocation","useState","trendingMovies","setTrendingMovies","useEffect","then","map","title","to","state","from"],"sourceRoot":""}