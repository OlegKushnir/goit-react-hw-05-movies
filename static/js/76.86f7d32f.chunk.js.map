{"version":3,"file":"static/js/76.86f7d32f.chunk.js","mappings":"6SACAA,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEqBF,EAAAA,GAAAA,IAAU,qBAAsB,CACnDG,OAAQ,CACNF,QAAAA,KAJJ,UAEMG,EAFN,UAOMC,EAASD,EAAOE,KAAKC,SAChBC,OAAS,GARpB,yCASSH,GATT,6DAYAI,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAbV,gFAgBG,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gGAEkBd,EAAAA,GAAAA,IAAA,gBAAmBc,GAAM,CAC5CX,OAAQ,CACNF,QAAAA,KAJD,YAEGG,EAFH,QAOQE,KAPR,yCAQMF,EAAOE,MARb,6DAWHG,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAZP,gFAeA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,kGAEkBd,EAAAA,GAAAA,IAAA,gBAAmBc,EAAnB,YAAiC,CACpDX,OAAQ,CACNF,QAAAA,KAJD,UAEGG,EAFH,SAQGY,EAAaZ,EAAOE,KAAKW,MAR5B,yCAUKD,GAVL,6DAaHP,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAdP,gFAkBA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,kGAEkBd,EAAAA,GAAAA,IAAA,gBAAmBc,EAAnB,YAAiC,CACpDX,OAAQ,CACNF,QAAAA,KAJD,UAEGG,EAFH,SAOGe,EAAgBf,EAAOE,KAAKC,SAP/B,yCASMY,GATN,6DAYHV,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAbP,gFAiBA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,kGAEkBrB,EAAAA,GAAAA,IAAA,eAA0B,CAC7CG,OAAQ,CACNF,QAAAA,EACAoB,MAAAA,KALD,UAEGjB,EAFH,UAQGC,EAASD,EAAOE,KAAKC,SAChBC,OAAS,GATjB,yCAUKH,GAVL,6DAcHI,QAAQC,IAAI,KAAGC,SACT,IAAIC,MAfP,gF,iGCtEb,EAA2B,uB,kBCyC3B,EApCa,WACX,OAAwBU,EAAAA,EAAAA,UAAS,MAAjC,eAAOL,EAAP,KAAaM,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAeS,GAASG,MAAK,SAAAC,GAAS,OAAIL,EAAQK,EAAZ,GAEvC,GAAE,IAEEX,GAGH,iCACE,kCACA,eAAIY,UAAWC,EAAf,SACGb,EAAKT,OAAS,EACbS,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWnB,EAApB,EAAoBA,GAAIoB,EAAxB,EAAwBA,aAAxB,OACP,2BACE,gBACEC,IACED,GACA,kCAAoCA,EAEtCE,IAAI,MAEN,uBAAIJ,KACJ,uCAAeC,OATRnB,EADF,KAcT,uEArBU,IA0BnB,C","sources":["backend/backend.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = 'e3c158ab405aa7844dcf81b819b98dcd';\n\n\n   export async function fetchTrending() {\n        try {\n          const result = await axios.get('trending/movie/day', {\n            params: {\n              api_key,\n            },\n          });\n          const movies = result.data.results;\n          if (movies.length > 0) {\n            return movies;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n      export async function fetchMovieById(id) {\n        try {\n          const result = await axios.get(`movie/${id}`, {\n            params: {\n              api_key,\n            },\n          });\n          if (result.data) {\n            return result.data;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n      export async function fetchMovieCast(id) {\n        try {\n          const result = await axios.get(`movie/${id}/credits`, {\n            params: {\n              api_key,\n            },\n          });\n    \n          const castResult = result.data.cast;\n          if (castResult) {\n           return castResult\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n\n      export async function fetchMovieRewiews(id) {\n        try {\n          const result = await axios.get(`movie/${id}/reviews`, {\n            params: {\n              api_key,\n            },\n          });\n          const reviewsResult = result.data.results;\n          if (reviewsResult) {\n            return reviewsResult;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n\n      export async function fetchSearchedMovie(query) {\n        try {\n          const result = await axios.get(`search/movie`, {\n            params: {\n              api_key,\n              query,\n            },\n          });\n          const movies = result.data.results;\n          if (movies.length > 0) {\n           return movies;\n          }\n        }\n        catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { fetchMovieCast } from 'backend/backend';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(movieCast => setCast(movieCast));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!cast) return null;\n\n  return (\n    <>\n      <h2>Cast</h2>\n      <ul className={css.castList}>\n        {cast.length > 0 ? (\n          cast.map(({ name, character, id, profile_path }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path &&\n                  'https://image.tmdb.org/t/p/w200' + profile_path\n                }\n                alt=\"\"\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any cast for this movie.</p>\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n"],"names":["axios","api_key","fetchTrending","params","result","movies","data","results","length","console","log","message","Error","fetchMovieById","id","fetchMovieCast","castResult","cast","fetchMovieRewiews","reviewsResult","fetchSearchedMovie","query","useState","setCast","movieId","useParams","useEffect","then","movieCast","className","css","map","name","character","profile_path","src","alt"],"sourceRoot":""}