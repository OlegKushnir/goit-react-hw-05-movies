{"version":3,"file":"static/js/663.5c87f798.chunk.js","mappings":"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","sources":["backend/backend.js","components/Search/SearchBox.jsx","components/Search/SearchResult.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = 'e3c158ab405aa7844dcf81b819b98dcd';\n\n\n   export async function fetchTrending() {\n        try {\n          const result = await axios.get('trending/movie/day', {\n            params: {\n              api_key,\n            },\n          });\n          const movies = result.data.results;\n          if (movies.length > 0) {\n            return movies;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n      export async function fetchMovieById(id) {\n        try {\n          const result = await axios.get(`movie/${id}`, {\n            params: {\n              api_key,\n            },\n          });\n          if (result.data) {\n            return result.data;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n      export async function fetchMovieCast(id) {\n        try {\n          const result = await axios.get(`movie/${id}/credits`, {\n            params: {\n              api_key,\n            },\n          });\n    \n          const castResult = result.data.cast;\n          if (castResult) {\n           return castResult\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n\n      export async function fetchMovieRewiews(id) {\n        try {\n          const result = await axios.get(`movie/${id}/reviews`, {\n            params: {\n              api_key,\n            },\n          });\n          const reviewsResult = result.data.results;\n          if (reviewsResult) {\n            return reviewsResult;\n          }\n        } catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }\n\n      export async function fetchSearchedMovie(query) {\n        try {\n          const result = await axios.get(`search/movie`, {\n            params: {\n              api_key,\n              query,\n            },\n          });\n          const movies = result.data.results;\n          if (movies.length > 0) {\n           return movies;\n          }\n        }\n        catch (er) {\n          console.log(er.message);\n          throw new Error();\n        }\n      }","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchBox = ({getValue}) => {\n    const [value,setValue] = useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n       if(value === '') return;\n        getValue(value);\n        setValue('');\n      };\n \n  return (\n    <form action=\"form\" onSubmit={handleSubmit}>\n    <input type=\"text\" onChange={(e)=>setValue(e.target.value)} value={value}/>\n    <button type=\"submit\">Search</button>\n  </form>\n  );\n};\n\nSearchBox.propTypes = {\n    getValue: PropTypes.func.isRequired,\n  };","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport const SearchResult = ({ searchedMovies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {searchedMovies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nSearchResult.propTypes = {\n  searchedMovies: PropTypes.arrayOf(\n    PropTypes.PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from '../Search/SearchBox';\nimport { SearchResult } from '../Search/SearchResult';\nimport { fetchSearchedMovie } from 'backend/backend';\n\n\n const Movies = () => {\n  const [searchedMovies,setSearchedMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n\n  function getValue(value) {\n    setSearchParams(value !== '' ? { query: value } : {});\n  }\n\n  useEffect(() => {\n    if (search) {\n      fetchSearchedMovie(search).then(movies=>setSearchedMovies(movies));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchBox getValue={getValue} />\n      {searchedMovies.length > 0 && <SearchResult searchedMovies={searchedMovies}  /> }\n    </>\n  );\n};\n\nexport default Movies;"],"names":["axios","api_key","fetchTrending","params","result","movies","data","results","length","console","log","message","Error","fetchMovieById","id","fetchMovieCast","castResult","cast","fetchMovieRewiews","reviewsResult","fetchSearchedMovie","query","SearchBox","getValue","useState","value","setValue","action","onSubmit","e","preventDefault","type","onChange","target","SearchResult","searchedMovies","location","useLocation","map","title","to","state","from","setSearchedMovies","useSearchParams","searchParams","setSearchParams","search","get","useEffect","then"],"sourceRoot":""}